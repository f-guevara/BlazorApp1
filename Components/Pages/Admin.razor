@page "/admin"
@rendermode InteractiveServer
@inject IDataHandler<Client> ClientDataHandler
@inject IDataHandler<Implant> ImplantDataHandler
@using BlazorApp1.Models

<h3>Admin Dashboard</h3>

<!-- Add New Client Section -->
<h4>Add New Client</h4>
<EditForm Model="@newClient" OnValidSubmit="@AddClient" FormName="clientForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Name:</label>
        <InputText @bind-Value="newClient.Name" />
    </div>
    <div>
        <label>Email:</label>
        <InputText @bind-Value="newClient.Email" />
    </div>
    <button type="submit">Add Client</button>
</EditForm>

<!-- Add New Implant Section -->
<h4>Add New Implant</h4>
<EditForm Model="@newImplant" OnValidSubmit="@AddImplant" FormName="implantForm">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <label>Name:</label>
        <InputText @bind-Value="newImplant.Name" />
    </div>
    <div>
        <label>Type:</label>
        <InputText @bind-Value="newImplant.Type" />
    </div>
    <div>
        <label>Price:</label>
        <InputNumber @bind-Value="newImplant.Price" />
    </div>
    <button type="submit">Add Implant</button>
</EditForm>

@code {
    // Client Section
    private Client newClient = new Client();

    private async Task AddClient()
    {
        await ClientDataHandler.SaveAsync(newClient);
        newClient = new Client(); // Reset form after saving
    }

    // Implant Section
    private Implant newImplant = new Implant();

    private async Task AddImplant()
    {
        await ImplantDataHandler.SaveAsync(newImplant);
        newImplant = new Implant(); // Reset form after saving
    }
}
