@page "/admin"
@using BlazorApp1.Models
@inject MedicalImplantsContext DbContext

<h3>Admin Dashboard</h3>

<h4>Add New Implant</h4>
<EditForm Model="@newImplant" OnValidSubmit="@AddImplant" FormName="implantForm">
    <DataAnnotationsValidator />

    <div class="form-group">
        <label for="name">Name:</label>
        <InputText id="name" @bind-Value="newImplant.Name" class="form-control" />
        <ValidationMessage For="@(() => newImplant.Name)" />
    </div>
    <div class="form-group">
        <label for="type">Type:</label>
        <InputText id="type" @bind-Value="newImplant.Type" class="form-control" />
        <ValidationMessage For="@(() => newImplant.Type)" />
    </div>
    <div class="form-group">
        <label for="price">Price:</label>
        <InputNumber id="price" @bind-Value="newImplant.Price" class="form-control" />
        <ValidationMessage For="@(() => newImplant.Price)" />
    </div>
    <button type="submit" class="btn btn-primary">Add Implant</button>
</EditForm>

<h4>Add New Client</h4>
<EditForm Model="@newClient" OnValidSubmit="@AddClient" FormName="clientForm">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="clientName">Name:</label>
        <InputText id="clientName" @bind-Value="newClient.Name" class="form-control" />
        <ValidationMessage For="@(() => newClient.Name)" />
    </div>
    <div class="form-group">
        <label for="email">Email:</label>
        <InputText id="email" @bind-Value="newClient.Email" class="form-control" />
        <ValidationMessage For="@(() => newClient.Email)" />
    </div>
    <button type="submit" class="btn btn-primary">Add Client</button>
</EditForm>

@code {
    private Implant newImplant = new Implant();
    private Client newClient = new Client();

    private async Task AddImplant()
    {
        if (newImplant != null)
        {
            DbContext.Implants.Add(newImplant);
            await DbContext.SaveChangesAsync();
            newImplant = new Implant();  // Clear the form after save
        }
    }

    private async Task AddClient()
    {
        if (newClient != null)
        {
            DbContext.Client.Add(newClient);
            await DbContext.SaveChangesAsync();
            newClient = new Client();  // Clear the form after save
        }
    }
}